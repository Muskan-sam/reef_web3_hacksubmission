import { SignerWithAddress } from "@nomiclabs/hardhat-ethers/signers";
import ethers, { Signer } from "ethers";
import { ProxySigner } from "./ProxySigner";
export declare class EthersSigner extends Signer implements ProxySigner {
    readonly address: string;
    private readonly _signer;
    static create(signer: SignerWithAddress): Promise<EthersSigner>;
    private constructor();
    getAddress(): Promise<string>;
    signMessage(message: string | ethers.utils.Bytes): Promise<string>;
    signTransaction(transaction: ethers.utils.Deferrable<ethers.providers.TransactionRequest>): Promise<string>;
    sendTransaction(transaction: ethers.utils.Deferrable<ethers.providers.TransactionRequest>): Promise<ethers.providers.TransactionResponse>;
    connect(provider: ethers.providers.Provider): EthersSigner;
    _signTypedData(...params: Parameters<ethers.providers.JsonRpcSigner["_signTypedData"]>): Promise<string>;
    toJSON(): string;
    claimDefaultAccount(): Promise<void>;
}
//# sourceMappingURL=EthersSigner.d.ts.map